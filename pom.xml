<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.chj.gr</groupId>
    <artifactId>sts-oauth2-client-credentials-server-to-server-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>sts-oauth2-client-credentials-server-to-server-demo</name>
    <description>Parent POM Spring Boot project</description>
	
	<parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.18</version>
        <relativePath/>
    </parent>
    
    <properties>
    	<java.version>21</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		
		<spring-cloud.version>2021.0.8</spring-cloud.version>
    </properties>
    
    
	<dependencies>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
		<!-- EUREKA CLIENT -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
		<!--CONFIG SERVER CLIENT-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-config</artifactId>
		</dependency>
		<!--
		https://stackoverflow.com/questions/67507452/no-spring-config-import-property-has-been-defined -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-bootstrap</artifactId>
		</dependency>
		<!--ZIPKIN-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
			<version>2.2.8.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.chj.gr</groupId>
			<artifactId>gr-conf-common-params</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
	<build>
		<plugins>
			<!-- SPRING-BOOT-MAVEN-PLUGIN -->
            <plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            
			<!-- GIT-COMMIT-ID-PLUGIN -->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>4.9.10</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
					<!--
			        <execution>
			            <id>validate-the-git-infos</id>
			            <goals>
			                <goal>validateRevision</goal>
			            </goals>
			            <phase>package</phase>
			        </execution>
			        -->
				</executions>
				<configuration>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
					<commitIdGenerationMode>full</commitIdGenerationMode>
					<!--
					<format>json</format>
					<failOnNoGitDirectory>false</failOnNoGitDirectory>   			==> omit errors if Git repository has not been found
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>		==> If you want to specify custom .git repository location
					<prefix>git</prefix>											==> If you want to specify a custom property prefix
					<verbose>false</verbose>										==> For more generous logging

					<runOnlyOnce>true</runOnlyOnce>									==> When working with project with submodules, setting this flag makes sure that plugin works only for parent repository
					<excludeProperties>
					    <excludeProperty>git.user.*</excludeProperty>
					</excludeProperties>
					<gitDescribe>
			            <skip>false</skip>
			            <always>false</always>
			            <dirty>-dirty</dirty>
			        </gitDescribe>
					-->
					<includeOnlyProperties>
						<includeOnlyProperty>git.branch</includeOnlyProperty>
						<includeOnlyProperty>git.build.user.email</includeOnlyProperty>
						<includeOnlyProperty>git.build.version</includeOnlyProperty>
						<includeOnlyProperty>git.build.time</includeOnlyProperty>
						<includeOnlyProperty>git.commit.id.full</includeOnlyProperty>
						<includeOnlyProperty>git.commit.user.email</includeOnlyProperty>
						<includeOnlyProperty>git.commit.message.full</includeOnlyProperty>
						<includeOnlyProperty>git.commit.time</includeOnlyProperty>
						<includeOnlyProperty>git.dirty</includeOnlyProperty>
					</includeOnlyProperties>
					<!--
					<validationProperties>			        
						      <validationProperty>
			                <name>validating git dirty</name>
			                <value>${git.dirty}</value>
			                <shouldMatchTo>false</shouldMatchTo>
			            </validationProperty>
			            <validationProperty>
			                <name>validating git build user</name>
			                <value>${git.build.user.email}</value>
			                <shouldMatchTo>jihed.chaabanee@gmail.com</shouldMatchTo>
			            </validationProperty>
			        </validationProperties>
			        -->
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	<modules>
		<module>sts-oauth2-client1-resource</module>
		<module>sts-oauth2-client2-resource</module>
		<module>sts-oauth2-products-resource</module>
		
		<module>sts-oauth2-consumer-webclient</module>
		<module>sts-oauth2-consumer-resttemplate</module>
    </modules>
	
</project>